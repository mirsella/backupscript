.vercel# Logs
logs
*log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
plugged
*log
.zcomp*
.zcompcache/
*gpg
ssl
*.git
*bak
novnc
id_rsa*
*key
*pub

*bak
bower_components
# Bower dependency directory (https://bower.io/)
build/Release
.cache
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# Compiled binary addons (https://nodejs.org/api/addons.html)
coverage
# Coverage directory used by tools like istanbul
# Dependency directories
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
dist
# dotenv environment variables file
.dynamodb/
# DynamoDB Local files
.env
.env.test
.eslintcache
.fusebox/
# FuseBox cache
# Gatsby files
*.git
*gpg
.grunt
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
# https://nextjs.org/blog/next-9-1#public-directory-support
id_rsa*
jspm_packages/
*key
*.lcov
lerna-debug.log*
lib-cov
.lock-wscript
*.log
*log
logs
# Microbundle cache
.next
# Next.js build output
node_modules/
.node_repl_history
# node-waf configuration
novnc
.npm
npm-debug.log*
.nuxt
# Nuxt.js build / generate output
.nyc_output
# nyc test coverage
# Optional eslint cache
# Optional npm cache directory
# Optional REPL history
out
# Output of 'npm pack'
# parcel-bundler cache (https://parceljs.org/)
.parcel-cache
*.pid
*.pid.lock
pids
plugged
.pnp.*
*pub
# public
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
# Runtime data
*.seed
.serverless/
# Serverless directories
# Snowpack dependency directory (https://snowpack.dev/)
ssl
# Stores VSCode versions used for testing VSCode extensions
# TernJS port file
.tern-port
*.tgz
*.tsbuildinfo
# TypeScript cache
.vercel# Logs
.vscode-test
# vuepress build output
.vuepress/dist
web_modules/
.yarn/build-state.yml
.yarn/cache
yarn-debug.log*
yarn-error.log*
.yarn/install-state.gz
.yarn-integrity
# Yarn Integrity file
.yarn/unplugged
# yarn v2

.zcomp*
.zcompcache/

yarn-lock
pnpm-lock.yaml
.steam
